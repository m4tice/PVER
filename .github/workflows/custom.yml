name: Pylint & Tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
        organization: ["m4tice"]
    steps:
    - uses: actions/checkout@v4
    
    - name: setup git credentials
      run: |
        git config --global user.name "m4tice"
        git config --global user.email "ductuan2908@gmail.com"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # pip install pylint
        pip install -r requirements.txt
        
    - name: Clone BC repository
      run: |
        git clone https://github.com/${{ matrix.organization }}/BC.git

    - name: Create directories
      run: |
        cd BC
        mkdir _out
        mkdir temp
        cd ..
    
    - run: ls

    - name: copy extract from PVER to BC\_temp
      run: |
        cp "./Conf/__CONFIG/extract.py" "./BC/temp/extract.py"

    - name: Run generator
      run: |
        cd BC
        python comsclappl_generate.py
        cd ..

    - run: ls BC/_out
    
    - name: copy generated ecucvalues from BC/_out to /Conf/BCC
      run: |
        cp "./BC/_out/ecucvalues.py" "Conf/BCC/ecucvalues.py"

    - name: Clean up
      run: |
        del /q ./BC/temp/*
        rd /s /q /BC/temp/
        
        del /q ./BC/_out/*
        rd /s /q ./BC/_out/

    - name: push changes to PVER remote
      run: |
        git add Conf/BCC; git commit -m "update: auto-generated ecucvalues file"
        git push
        
    # - name: Analysing the code with pylint
    #   run: |
    #     pylint $(git ls-files '*.py')
    # - name: Testing the code with pytest
    #   run: |
    #     python -m pytest
